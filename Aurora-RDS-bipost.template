{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "",
  "Parameters": {
    "DBAdminUsername": {
      "Default": "root",
      "Type": "String",
      "Description": "Database admin account name",
      "MinLength": 4,
      "MaxLength": 16,
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription": "Name must begin with a letter and contain only alphanumeric characters"
    },
    "DBAdminPassword": {
      "AllowedPattern": "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*",
      "ConstraintDescription": "Must be at least 8 characters containing letters, numbers and symbols.",
      "Description": "Database Admin password. Must be at least 8 characters containing letters, numbers and symbols.",
      "MaxLength": "32",
      "MinLength": "6",
      "NoEcho": "true",
      "Type": "String"
    },
    "DBInstanceClass": {
      "Default": "db.t2.small",
      "Type": "String",
      "Description": "Database instance class, e.g. db.t2.micro (free tier)",
      "ConstraintDescription": "DB instance class not supported",
      "AllowedValues": [
        "db.t2.small",
        "db.t2.medium",
        "db.t2.xlarge",
        "db.r4.large",
        "db.r4.xlarge",
        "db.r4.2xlarge",
        "db.r4.4xlarge",
        "db.r4.8xlarge",
        "db.r4.16xlarge"
      ]
    },
    "Environment": {
      "Description": "Environment name",
      "Type": "String",
      "Default": "dev",
      "AllowedValues": [
        "dev",
        "prod",
        "test",
        "demo"
      ],
      "ConstraintDescription": "Select the environment to deploy"
    },
    "BucketName": {
      "Description": "Bipost provided bucket name",
      "Type": "String",
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9-]*",
      "ConstraintDescription": "Insert the Bipost provided bucket name"
    },
    "SubnetsAZ": {
      "Description": "Select two availability zones to create the resources",
      "Type": "List<AWS::EC2::AvailabilityZone::Name>"
    },
    "PublicSubnetACIDR": {
      "Description": "Public Subnet A CIDR",
      "Type": "String",
      "Default": "10.10.10.0/24",
      "AllowedPattern": "^(([0-9][0-9]?|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9][0-9]?|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([1-2]?[0-9]|3[1-2])$"
    },
    "PublicSubnetBCIDR": {
      "Description": " Public Subnet B CIDR",
      "Type": "String",
      "Default": "10.10.20.0/24",
      "AllowedPattern": "^(([0-9][0-9]?|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9][0-9]?|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([1-2]?[0-9]|3[1-2])$"
    },
    "VPCCIDR": {
      "Description": "Network CIDR for resources",
      "Type": "String",
      "Default": "10.10.0.0/16",
      "AllowedPattern": "^(([0-9][0-9]?|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9][0-9]?|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([1-2]?[0-9]|3[1-2])$"
    }
  },
  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": {
          "Ref": "VPCCIDR"
        },
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "-VPC"
                ]
              ]
            }
          }
        ]
      }
    },
    "PublicSubnetA": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "VPC",
      "Properties": {
        "MapPublicIpOnLaunch": "True",
        "VpcId": {
          "Ref": "VPC"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Ref": "SubnetsAZ"
            }
          ]
        },
        "CidrBlock": {
          "Ref": "PublicSubnetACIDR"
        },
        "Tags": [
          {
            "Key": "Layer",
            "Value": "networking"
          },
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "-PublicSubnetA"
                ]
              ]
            }
          }
        ]
      }
    },
    "PublicSubnetB": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "VPC",
      "Properties": {
        "MapPublicIpOnLaunch": "True",
        "VpcId": {
          "Ref": "VPC"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Ref": "SubnetsAZ"
            }
          ]
        },
        "CidrBlock": {
          "Ref": "PublicSubnetBCIDR"
        },
        "Tags": [
          {
            "Key": "Layer",
            "Value": "networking"
          },
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "-PublicSubnetB"
                ]
              ]
            }
          }
        ]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Layer",
            "Value": "networking"
          },
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "-InternetGateway"
                ]
              ]
            }
          }
        ]
      }
    },
    "GatewayToInternet": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "PublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": {
              "Ref": "AWS::StackId"
            }
          },
          {
            "Key": "Network",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "-Public-RouteTable"
                ]
              ]
            }
          }
        ]
      }
    },
    "PublicSubnetARouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnetA"
        },
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        }
      }
    },
    "PublicSubnetBRouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnetB"
        },
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        }
      }
    },
    "PublicSubnetRouteToInternetGateway": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        },
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        }
      }
    },
    "PublicS3Endpoint": {
      "Type": "AWS::EC2::VPCEndpoint",
      "Properties": {
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "*",
              "Effect": "Allow",
              "Resource": "*",
              "Principal": "*"
            }
          ]
        },
        "RouteTableIds": [
          {
            "Ref": "PublicRouteTable"
          }
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region"
              },
              ".s3"
            ]
          ]
        },
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "DBSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "DependsOn": "VPC",
      "Properties": {
        "GroupDescription": "Enable access to the RDS DB",
        "VpcId": {
          "Ref": "VPC"
        },
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "IpProtocol": "tcp",
            "FromPort": "0",
            "ToPort": "65535"
           
          }
        ],
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": 3306,
            "ToPort": 3306,
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${AWS::StackName}-DbSecurityGroup"
            }
          }
        ]
      }
    },
    "DBRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "Path": "/",
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "rds.amazonaws.com"
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "bipostRDStoS3",
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:GetObject",
                    "s3:GetObjectVersion"
                  ],
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:s3:::",
                          {
                            "Ref": "BucketName"
                          }
                        ]
                      ]
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:GetObject",
                    "s3:GetObjectVersion"
                  ],
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:s3:::",
                          {
                            "Ref": "BucketName"
                          },
                          "/*"
                        ]
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "DBSubnetGroup": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "DependsOn": [
        "PublicSubnetA",
        "PublicSubnetB"
      ],
      "Properties": {
        "DBSubnetGroupDescription": "Bipost Aurora Database subnet group",
        "SubnetIds": [
          {
            "Ref": "PublicSubnetA"
          },
          {
            "Ref": "PublicSubnetB"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "AWS::StackName"
            }
          }
        ]
      }
    },
    "DBClusterParameterGroup": {
      "Type": "AWS::RDS::DBClusterParameterGroup",
      "DependsOn": "DBRole",
      "Properties": {
        "Description": "Bipost Aurora Database  Cluster Parameter Group",
        "Family": "aurora5.6",
        "Parameters": {
          "aurora_load_from_s3_role": {
            "Ref": "DBRole"
          },
          "aurora_select_into_s3_role": {
            "Ref": "DBRole"
          },
          "aws_default_s3_role": {
            "Ref": "DBRole"
          }
        }
      }
    },
    "DBParameterGroup": {
      "Type": "AWS::RDS::DBParameterGroup",
      "Properties": {
        "Description": "Bipost Aurora Parameter Group",
        "Family": "aurora5.6",
        "Parameters": {
          "log_bin_trust_function_creators": "1",
          "max_allowed_packet": "1073741824",
          "max_connections": "16000",
          "max_user_connections": "4294967295"
        }
      }
    },
    "DBCluster": {
      "Type": "AWS::RDS::DBCluster",
      "Properties": {
        "Engine": "aurora",
        "MasterUsername": {
          "Ref": "DBAdminUsername"
        },
        "MasterUserPassword": {
          "Ref": "DBAdminPassword"
        },
        "DBSubnetGroupName": {
          "Ref": "DBSubnetGroup"
        },
        "DatabaseName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "Environment"
              },
              "BipostDB"
            ]
          ]
        },
        "DBClusterParameterGroupName": {
          "Ref": "DBClusterParameterGroup"
        },
        "VpcSecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "DBSecurityGroup",
              "GroupId"
            ]
          }
        ]
      },
      "DependsOn": [
        "DBSubnetGroup",
        "DBClusterParameterGroup",
        "DBSecurityGroup"
      ]
    },
    "DBInstance": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "Engine": "aurora",
        "DBClusterIdentifier": {
          "Ref": "DBCluster"
        },
        "DBInstanceClass": {
          "Ref": "DBInstanceClass"
        },
        "DBSubnetGroupName": {
          "Ref": "DBSubnetGroup"
        },
        "PubliclyAccessible": "true",
        "DBParameterGroupName": {
          "Ref": "DBParameterGroup"
        },
        "CopyTagsToSnapshot": true,
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Environment"
                  },
                  "BipostDB"
                ]
              ]
            }
          }
        ]
      },
      "DependsOn": [
        "DBCluster",
        "DBParameterGroup"
      ]
    }
  },
  "Outputs": {
    "RdsDbURL": {
      "Description": "RDS Aurora Database URL",
      "Value": {
        "Fn::GetAtt": [
          "DBCluster",
          "Endpoint.Address"
        ]
      }
    },
    "DbUser": {
      "Description": "RDS Aurora Database admin account user",
      "Value": {
        "Ref": "DBAdminUsername"
      }
    },
    "DBRole": {
      "Description": "IAM Role to allow Aurora to s3",
      "Value": {
        "Ref": "DBRole"
      }
    }
  }
}